# Lights back to full over 7 seconds after media stops
  - alias: 'Media player stopped'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        from: 'playing'
        to: 'idle'
    condition:
      - condition: time
        after: '17:00:00'
        before: '03:00:00'
    action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10

# Lights back to full over 7 seconds after media stops
  - alias: 'Media player stopped unavailable'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        from: 'playing'
        to: 'unavailable'
    condition:
      - condition: time
        after: '17:00:00'
        before: '03:00:00'
    action:
    - service: light.turn_on
      data_template:
        entity_id: light.living_room
        brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
        transition: 10

# Lights turn off while media is playing
  - alias: 'Media player playing'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        to: 'playing'
        from: 'idle'
    action:
      - service: light.turn_off
        data:
          entity_id: light.living_room
          transition: 2

# Lights turn off while media is playing
  - alias: 'Media player playing unavailable'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        to: 'playing'
    action:
      - service: light.turn_off
        data:
          entity_id: light.living_room
          transition: 2

# Lights dim when media is paused
  - alias: 'Media player paused'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        from: 'playing'
        to: 'paused'
    condition:
      - condition: time
        after: '17:00:00'
        before: '03:00:00'
    action:
      service: light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: '33'
        transition: '3'

# Lights turn off when media is unpaused
  - alias: 'Media player unpaused'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        from: 'paused'
        to: 'playing'
    action:
      service: light.turn_off
      data:
        entity_id: light.living_room

# Lights dim to full going from paused to idle
  - alias: 'Media player pause to idle'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        from: 'paused'
        to: 'idle'
    condition:
      - condition: time
        after: '17:00:00'
        before: '03:00:00'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.living_room
          brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
          transition: 10

# Lights dim to full going from paused to idle
  - alias: 'Media player pause to unavailable'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.plex_living_room_tv
        from: 'paused'
        to: 'unavailable'
    condition:
      - condition: time
        after: '17:00:00'
        before: '03:00:00'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.living_room
          brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
          transition: 10

################
##### ROKU #####
################

# Lights turn off while roku media is playing
  - alias: 'Roku player playing'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: >
          {% set src = state_attr('media_player.living_room_tv', 'source') %}
          {{ src in ['Netflix','Prime Video','YouTube'] }}
    action:
      - service: light.turn_off
        data:
          entity_id: light.living_room
          transition: 2

  - alias: 'Roku player stopped'
    initial_state: 'on'
    trigger:
      - platform: template
        value_template: >
          {% set src = state_attr('media_player.living_room_tv', 'source') %}
          {{ src in ['Roku','Home'] }}
    condition:
      - condition: time
        after: '17:00:00'
        before: '03:00:00'
    action:
      - service: light.turn_on
        data_template:
          entity_id: light.living_room
          brightness_pct: "{{ state_attr('switch.circadian_lighting_living_room', 'brightness') | int }}"
          transition: 10
