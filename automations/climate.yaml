# When porch door is open turn off nest
 - alias: Door open turn off nest
   initial_state: 'on'
   trigger:
     platform: state
     entity_id: binary_sensor.door_window_sensor_158d00023eb0bb
     to: 'on'
     for:
       seconds: '30'
   action:
     - service: climate.set_operation_mode
       data:
         entity_id: climate.living_room
         operation_mode: 'off'

# When porch door is closed turn Nest back on
 - alias: Door closed turn on nest
   initial_state: 'on'
   trigger:
     platform: state
     entity_id: binary_sensor.door_window_sensor_158d00023eb0bb
     to: 'off'
     for:
       seconds: '10'
   action:
     - service: climate.set_operation_mode
       data_template:
         entity_id: climate.living_room
         operation_mode: >
           {% if states('sensor.season') == 'spring' or states('sensor.season') == 'summer' %}
             cool
           {% elif states('sensor.season') == 'fall' %}
             auto
           {% else %}
             heat
           {% endif %}

# Turn on ceiling fan under certain conditions
 - alias: Turn on Ceiling Fan
   initial_state: 'on'
   trigger:
     platform: time_pattern
     minutes: '10'
     seconds: '00'
   condition:
     condition: and
     conditions:
       - condition: state
         entity_id: group.family
         state: 'home'
       - condition: time
         after: '08:00:00'
         before: '22:00:00'
       - condition: numeric_state
         entity_id: sensor.living_room_thermostat_temperature
         above: '72'
       - condition: numeric_state
         entity_id: sensor.living_room_thermostat_humidity
         above: '55'
   action:
     - service: switch.turn_on
       entity_id:  switch.living_room_fan

# Change Nest to Seaonal Mode
# - alias: Nest Seasonal Tracker
#   initial_state: 'on'
#   trigger:
#     platform: time_pattern
#     hours: '/1'
#     minutes: '05'
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: group.family
#         state: 'home'
#       - condition: time
#         after: '07:00:00'
#         before: '22:00:00'
#   action:
#     - service: climate.set_operation_mode
#       data_template:
#         entity_id: climate.living_room
#         operation_mode: >
#           {% if states('sensor.season') == 'spring' or states('sensor.season') == 'summer' %}
#             cool
#           {% elif states('sensor.season') == 'fall' %}
#             auto
#           {% else %}
#             heat
#           {% endif %}

# Temp goes down to 66 when Sean only at home (winter)
 - alias: 'Sean Winter Preferences'
   trigger:
    - platform: state
      entity_id: group.emily
      to: not_home
   condition:
     condition: and
     conditions:
       - condition: state
         entity_id: group.emily
         state: 'not_home'
       - condition: state
         entity_id: group.sean
         state: 'home'
       - condition: state
         entity_id: sensor.living_room_thermostat_operation_mode
         state: 'heat'
       - condition: time
         after: '08:00:00'
         before: '20:30:00'
   action:
     service: climate.set_temperature
     data:
       entity_id: climate.living_room
       temperature: 66

# Temp goes back up by 2 when Family at home (winter)
 - alias: 'Family Winter Preferences'
   trigger:
     - platform: state
       entity_id: group.emily
       to: home
   condition:
     condition: and
     conditions:
       - condition: state
         entity_id: sensor.living_room_thermostat_operation_mode
         state: 'heat'
       - condition: time
         after: '08:00:00'
         before: '20:30:00'
   action:
     - service: climate.set_temperature
       data:
         entity_id: climate.living_room
         temperature: 68
